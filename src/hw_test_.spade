use lib::main::OutputPins;
use lib::main::Output;
use lib::main::Timing;
use lib::main::display_gen;
use lib::main::output_translator;

entity top(clk: clk, rst: bool) -> OutputPins {
    let t = Timing$(
        us1: 12,
        us3: 36,
        mhz1: 12
    );

    let display_signals = inst display_gen(clk, rst, t);

    let with_pixels = match display_signals.o {
        Output::UpdateMode => Output::UpdateMode(),
        Output::FrameInv(v) => Output::FrameInv(v),
        Output::AllClear => Output::AllClear(),
        Output::Dummy => Output::Dummy(),
        Output::Address(v) => Output::Address(v),
        Output::Pixel((x, y)) => Output::Pixel((x & 0b100) == 0 && (y & 0b100) == 0),
        Output::CsHigh => Output::CsHigh(),
        Output::CsLow => Output::CsLow(),
    };

    output_translator(with_pixels, display_signals.sclk)
}
